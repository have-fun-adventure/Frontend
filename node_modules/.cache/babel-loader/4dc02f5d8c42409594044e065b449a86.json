{"ast":null,"code":"import _classCallCheck from \"/Users/aishahalmaghrbi/code/wdi/projects/have-fun-adventure/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aishahalmaghrbi/code/wdi/projects/have-fun-adventure/Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aishahalmaghrbi/code/wdi/projects/have-fun-adventure/Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aishahalmaghrbi/code/wdi/projects/have-fun-adventure/Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aishahalmaghrbi/code/wdi/projects/have-fun-adventure/Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aishahalmaghrbi/code/wdi/projects/have-fun-adventure/Frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport About from \"./components/About\";\nimport UserForm from \"./components/UserForm\";\nimport Activity from \"./components/Activity\";\nimport Profile from \"./components/Profile\";\nimport List from \"./components/List\";\nvar API_URL = 'http://localhost:3000/';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.onNavClick = function (activeNav) {\n      console.log(\"activeNav toggle\");\n\n      _this.setState({\n        activeNav: activeNav\n      });\n    };\n\n    _this.state = {\n      navs: [\"Home\", \"About\", \"Activity\", \"Login\"],\n      activeNav: \"home\",\n      userInfo: '',\n      // TODO : make the user info into an object \n      username: '',\n      activity: [],\n      list: [],\n      room: false,\n      activityInfo: '',\n      listInfo: '',\n      activityForm: false,\n      listForm: false,\n      loginForm: false,\n      userForm: false,\n      showProfile: false\n    };\n    return _this;\n  } // fetch all activity\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // chek if we have a user \n      this.setState({\n        navs: navs.include([\"sigin out\"])\n      }); // if it is noy \n\n      this.setState({\n        navs: navs.include([\"sigin out\"])\n      });\n      fetch(\"\".concat(API_URL, \"activity\")).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(\"get all activity data\", data);\n\n        _this2.setState({\n          activity: data\n        });\n      });\n    }\n    /*************** NAV *********************/\n\n  }, {\n    key: \"setLoginForm\",\n    // show the login form \n    value: function setLoginForm() {\n      this.setState({\n        loginForm: !this.state.loginForm,\n        userForm: false\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        username: event.target.value\n      });\n    } // handle the user name to check if he is registered or no \n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      fetch(\"\".concat(API_URL, \"user/\").concat(this.state.username)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this3.setState({\n          userInfo: data,\n          loginForm: false,\n          activityForm: true\n        });\n      }).catch(function (error) {\n        console.log('error in submit user: ', error);\n        alert(\"This username NOT Registered\");\n      });\n      console.log(\"this.state.userInfo:\", this.state.userInfo);\n    } //handel thre form sumbmission if the user to create a new user or updtae user info\n\n  }, {\n    key: \"handleFormSubmit\",\n    value: function handleFormSubmit(user) {\n      this.state.userInfo ? this.updateUserInfo(user) : this.createNewUser(user);\n    } // update user information in the database \n\n  }, {\n    key: \"updateUserInfo\",\n    value: function updateUserInfo(user) {\n      var _this4 = this;\n\n      console.log(\"update user info \", user);\n      var url = \"\".concat(API_URL, \"user/\").concat(user.id);\n      fetch(url, {\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this4.setState({\n          userInfo: data,\n          userForm: false\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } // create user information in the database \n\n  }, {\n    key: \"createNewUser\",\n    value: function createNewUser(user) {\n      var _this5 = this;\n\n      var url = \"\".concat(API_URL, \"user\");\n      console.log(\"create user info\", user);\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(\"create user info  data\", data);\n\n        _this5.setState({\n          userInfo: data,\n          userForm: false\n        });\n      }).catch(function (error) {\n        console.log('create New User Error: ', error);\n        alert(\"Tnis username or email is Registerd.\");\n      });\n    } //handel new user \n\n  }, {\n    key: \"handleRegister\",\n    value: function handleRegister() {\n      this.setState({\n        userForm: !this.state.userForm,\n        loginForm: false\n      });\n    } // render user form for the registeration\n\n  }, {\n    key: \"renderUserForm\",\n    value: function renderUserForm() {\n      return React.createElement(UserForm, {\n        userInfo: this.state.userInfo,\n        handleFormSubmit: this.handleFormSubmit.bind(this),\n        handleRegister: this.handleRegister.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      });\n    } // render the user profile component\n\n  }, {\n    key: \"renderUserProfile\",\n    value: function renderUserProfile() {\n      return React.createElement(Profile, {\n        user: this.state.userInfo,\n        handleRegister: this.handleRegister.bind(this),\n        setUserProfile: this.setUserProfile.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      });\n    } // claer the state for log out\n\n  }, {\n    key: \"handleLogout\",\n    value: function handleLogout() {\n      this.setState({\n        username: '',\n        userInfo: undefined,\n        showProfile: false,\n        userForm: false\n      });\n    } //This function will render the log-in form it the login is true\n\n  }, {\n    key: \"renderLoginForm\",\n    value: function renderLoginForm() {\n      var _this6 = this;\n\n      return React.createElement(\"div\", {\n        className: \"user-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"show-form\",\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"close-modal\",\n        onClick: function onClick() {\n          return _this6.setLoginForm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"x\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Username: \"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter username\",\n        onChange: this.handleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }, {\n    key: \"renderActivityForm\",\n    value: function renderActivityForm() {\n      console.log(\"i am in render activity form\");\n      console.log(this.state.activityForm);\n\n      if (this.state.activityForm === true) {\n        return React.createElement(Activity, {\n          handleFormActivity: this.handleFormActivity.bind(this),\n          userInfo: this.state.userInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        });\n      }\n    } //handel activity submit  \n\n  }, {\n    key: \"handleActivitySubmit\",\n    value: function handleActivitySubmit(event) {\n      var _this7 = this;\n\n      event.preventDefault();\n      fetch(\"\".concat(API_URL, \"activity/\").concat(this.state.id)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this7.setState({\n          activityInfo: data,\n          activityForm: true,\n          listForm: true\n        });\n      }).catch(function (error) {\n        console.log('App.js handleSubmit function: ', error);\n      });\n      console.log(this.state.activityInfo);\n    } //handel update and create activity \n\n  }, {\n    key: \"handleFormActivity\",\n    value: function handleFormActivity(activity) {\n      this.state.activityInfo ? this.updateActivityInfo(activity) : this.createNewActivity(activity);\n    } // update activity information in the database \n\n  }, {\n    key: \"updateActivityInfo\",\n    value: function updateActivityInfo(activity) {\n      var _this8 = this;\n\n      console.log(\"update activity info\", activity);\n      var url = \"\".concat(API_URL, \"activity/\").concat(activity.id);\n      fetch(url, {\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(activity)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this8.setState({\n          activityInfo: data,\n          activityForm: true\n        });\n      }).catch(function (error) {\n        console.log(\"update activity info error :\", error);\n      });\n    }\n  }, {\n    key: \"createNewActivity\",\n    value: function createNewActivity(activity) {\n      var _this9 = this;\n\n      var url = \"\".concat(API_URL, \"activity\");\n      console.log(\"create new activity info\", activity);\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(activity)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(\"create new activity data\", data);\n\n        _this9.setState({\n          activityInfo: data,\n          activityForm: true\n        });\n      }).catch(function (error) {\n        console.log('create New activity Error: ', error);\n      });\n    } //handel delete and create list \n    // handleFormlist(list) {\n    //   this.state.listInfo ? this.deleteList(list) : this.createNewlist(list)\n    // }\n\n  }, {\n    key: \"submitListForm\",\n    value: function submitListForm() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(List // handleFormlist={this.handleFormlist(this.list)} \n      , {\n        createNewList: this.createNewList(),\n        userInfo: this.state.userInfo,\n        activityInfo: this.state.activityInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"createNewList\",\n    value: function createNewList(list) {\n      var _this10 = this;\n\n      var url = \"\".concat(API_URL, \"list\");\n      console.log(\"create new list info\", list);\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(list)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(\"create new list data\", data);\n\n        _this10.setState({\n          listInfo: data,\n          listForm: true\n        });\n      }).catch(function (error) {\n        console.log('create New list Error: ', error);\n      });\n    }\n  }, {\n    key: \"deleteList\",\n    value: function deleteList(list) {\n      var _this11 = this;\n\n      var url = \"\".concat(API_URL, \"list/\").concat(list.id);\n      fetch(url, {\n        method: 'DELETE'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var list = _this11.state.listInfo.filter(function (li) {\n          return li.id !== list;\n        });\n\n        _this11.setState({\n          list: list,\n          listForm: null\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } // render all activity \n\n  }, {\n    key: \"renderActivity\",\n    value: function renderActivity(active) {\n      var _this12 = this;\n\n      return active.map(function (act) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, act.titel), React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, act.location), React.createElement(\"h6\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, act.date), React.createElement(\"p\", {\n          className: \"card-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, act.description), React.createElement(\"a\", {\n          onclick: _this12.submitListForm(),\n          className: \"btn btn-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }, \"Let's #have_fun  \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }, \" \\uD83C\\uDF1F \")))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        onNavClick: this.onNavClick,\n        active: this.state.activeNav,\n        navs: this.state.navs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }), React.createElement(About, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }), this.renderLoginForm(), this.renderActivityForm(), React.createElement(UserForm, {\n        userInfo: this.state.userInfo,\n        handleFormSubmit: this.handleFormSubmit.bind(this),\n        handleRegister: this.handleRegister.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }), this.renderActivity(this.state.activity), this.submitListForm());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/aishahalmaghrbi/code/wdi/projects/have-fun-adventure/Frontend/src/App.js"],"names":["React","Component","Nav","About","UserForm","Activity","Profile","List","API_URL","App","onNavClick","activeNav","console","log","setState","state","navs","userInfo","username","activity","list","room","activityInfo","listInfo","activityForm","listForm","loginForm","userForm","showProfile","include","fetch","then","res","json","data","event","target","value","preventDefault","response","catch","error","alert","user","updateUserInfo","createNewUser","url","id","method","headers","body","JSON","stringify","handleFormSubmit","bind","handleRegister","setUserProfile","undefined","handleSubmit","setLoginForm","handleChange","handleFormActivity","updateActivityInfo","createNewActivity","createNewList","filter","li","active","map","act","titel","location","date","description","submitListForm","renderLoginForm","renderActivityForm","renderActivity"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport About from \"./components/About\";\nimport UserForm from \"./components/UserForm\"\nimport Activity from \"./components/Activity\";\nimport Profile from \"./components/Profile\"\nimport List from \"./components/List\"\n\nconst API_URL = 'http://localhost:3000/';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      navs:[\"Home\", \"About\", \"Activity\", \"Login\"],\n      activeNav: \"home\",\n      userInfo: '', // TODO : make the user info into an object \n      username: '',\n      activity: [],\n      list: [],\n      room: false,\n      activityInfo: '',\n      listInfo: '',\n      activityForm: false,\n      listForm: false,\n      loginForm: false,\n      userForm: false,\n      showProfile: false,\n    };\n  }\n  // fetch all activity\n  componentDidMount() {\n\n    // chek if we have a user \n\n    this.setState({ navs: navs.include([\"sigin out\"])})\n    // if it is noy \n  \n    this.setState({ navs: navs.include([\"sigin out\"])})\n\n\n    fetch(`${API_URL}activity`)\n      .then((res) => { return res.json() })\n      .then((data) => {\n        console.log(\"get all activity data\", data)\n        this.setState({ activity: data });\n\n      })\n\n\n  }\n\n  /*************** NAV *********************/\n  onNavClick = activeNav => {\n    console.log(\"activeNav toggle\")\n    this.setState({ activeNav });\n  };\n\n  // show the login form \n  setLoginForm() {\n    this.setState({\n      loginForm: !this.state.loginForm,\n      userForm: false,\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      username: event.target.value\n    })\n  }\n\n  // handle the user name to check if he is registered or no \n  handleSubmit(event) {\n    event.preventDefault();\n\n    fetch(`${API_URL}user/${this.state.username}`)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          userInfo: data,\n          loginForm: false,\n          activityForm: true\n        })\n      })\n      .catch(error => {\n        console.log('error in submit user: ', error);\n        alert(\"This username NOT Registered\");\n      })\n    console.log(\"this.state.userInfo:\", this.state.userInfo);\n  }\n  //handel thre form sumbmission if the user to create a new user or updtae user info\n  handleFormSubmit(user) {\n    this.state.userInfo ? this.updateUserInfo(user) : this.createNewUser(user)\n  }\n\n  // update user information in the database \n  updateUserInfo(user) {\n    console.log(\"update user info \", user);\n    const url = `${API_URL}user/${user.id}`\n\n    fetch(url, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          userInfo: data,\n          userForm: false\n        })\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n\n\n  // create user information in the database \n  createNewUser(user) {\n    const url = `${API_URL}user`\n    console.log(\"create user info\", user)\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"create user info  data\", data)\n\n        this.setState({\n          userInfo: data,\n          userForm: false\n        })\n      })\n      .catch(error => {\n        console.log('create New User Error: ', error)\n        alert(\"Tnis username or email is Registerd.\");\n      })\n  }\n\n\n  //handel new user \n  handleRegister() {\n    this.setState({\n      userForm: !this.state.userForm,\n      loginForm: false\n    });\n  }\n\n\n  // render user form for the registeration\n  renderUserForm() {\n    return <UserForm userInfo={this.state.userInfo}\n      handleFormSubmit={this.handleFormSubmit.bind(this)}\n      handleRegister={this.handleRegister.bind(this)}\n    />\n  }\n\n  // render the user profile component\n  renderUserProfile() {\n    return <Profile user={this.state.userInfo}\n      handleRegister={this.handleRegister.bind(this)}\n      setUserProfile={this.setUserProfile.bind(this)}\n    />\n  }\n\n  // claer the state for log out\n  handleLogout() {\n    this.setState({\n      username: '',\n      userInfo: undefined,\n      showProfile: false,\n      userForm: false\n    })\n  }\n\n  //This function will render the log-in form it the login is true\n  renderLoginForm() {\n    return (\n      <div className=\"user-form\">\n        <form className=\"show-form\" onSubmit={this.handleSubmit.bind(this)}>\n          <div className=\"close-modal\" onClick={() => this.setLoginForm()}>x</div>\n          <label>Username: </label>\n          <input type=\"text\" placeholder=\"Enter username\" onChange={this.handleChange.bind(this)} />\n          <button>Login</button>\n        </form>\n      </div>\n    )\n  }\n  renderActivityForm() {\n    console.log(\"i am in render activity form\");\n    console.log(this.state.activityForm);\n    if (this.state.activityForm === true) {\n      return (\n        <Activity handleFormActivity={this.handleFormActivity.bind(this)}\n          userInfo={this.state.userInfo} />\n      )\n    }\n  }\n  //handel activity submit  \n  handleActivitySubmit(event) {\n    event.preventDefault();\n\n    fetch(`${API_URL}activity/${this.state.id}`)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          activityInfo: data,\n          activityForm: true,\n          listForm: true,\n\n        })\n      })\n      .catch(error => {\n        console.log('App.js handleSubmit function: ', error);\n\n      })\n    console.log(this.state.activityInfo);\n  }\n\n\n  //handel update and create activity \n  handleFormActivity(activity) {\n    this.state.activityInfo ? this.updateActivityInfo(activity) : this.createNewActivity(activity)\n  }\n\n\n  // update activity information in the database \n  updateActivityInfo(activity) {\n    console.log(\"update activity info\", activity);\n    const url = `${API_URL}activity/${activity.id}`\n\n    fetch(url, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(activity)\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          activityInfo: data,\n          activityForm: true\n        })\n      })\n      .catch(error => {\n        console.log(\"update activity info error :\", error);\n      })\n  }\n\n\n  createNewActivity(activity) {\n    const url = `${API_URL}activity`\n    console.log(\"create new activity info\", activity)\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(activity)\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"create new activity data\", data)\n\n        this.setState({\n          activityInfo: data,\n          activityForm: true\n        })\n      })\n      .catch(error => {\n        console.log('create New activity Error: ', error)\n      })\n  }\n\n  //handel delete and create list \n  // handleFormlist(list) {\n  //   this.state.listInfo ? this.deleteList(list) : this.createNewlist(list)\n  // }\n\n  submitListForm() {\n    return (\n      <div>\n        <List\n          // handleFormlist={this.handleFormlist(this.list)} \n          createNewList={this.createNewList()}\n          userInfo={this.state.userInfo}\n          activityInfo={this.state.activityInfo}\n        />\n\n      </div>\n    )\n  }\n\n  createNewList(list) {\n    const url = `${API_URL}list`\n    console.log(\"create new list info\", list)\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(list)\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"create new list data\", data)\n\n        this.setState({\n          listInfo: data,\n          listForm: true\n        })\n      })\n      .catch(error => {\n        console.log('create New list Error: ', error)\n      })\n  }\n\n  deleteList(list) {\n\n    const url = `${API_URL}list/${list.id}`\n\n    fetch(url, {\n      method: 'DELETE'\n    })\n      .then(response => response.json())\n      .then(data => {\n        const list = this.state.listInfo.filter(li => li.id !== list)\n        this.setState({\n          list: list,\n          listForm: null\n        })\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n\n\n  // render all activity \n  renderActivity(active) {\n    return active.map((act) => {\n      return (\n        <div>\n          <div className=\"card text-center\">\n            <div className=\"card-header\">\n              {act.titel}\n            </div>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{act.location}</h5>\n              <h6 className=\"card-title\">{act.date}</h6>\n              <p className=\"card-text\">{act.description}</p>\n              <a onclick={this.submitListForm()} className=\"btn btn-primary\">Let's #have_fun  <span> 🌟 </span></a>\n            </div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n\n\n\n  render() {\n    return (\n      <div>\n\n        <Nav\n          onNavClick={this.onNavClick}\n          active={this.state.activeNav}\n          navs={this.state.navs}\n        />\n\n        <About />\n\n        {this.renderLoginForm()}\n        {this.renderActivityForm()}\n\n        <UserForm userInfo={this.state.userInfo}\n          handleFormSubmit={this.handleFormSubmit.bind(this)}\n          handleRegister={this.handleRegister.bind(this)}\n        />\n        {this.renderActivity(this.state.activity)}\n        {this.submitListForm()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}